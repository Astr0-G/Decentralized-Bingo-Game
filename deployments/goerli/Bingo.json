{
  "address": "0x38AD953A1B8Dae3dBbe77D93d04349D73c2dA2D0",
  "abi": [
    {
      "constant": false,
      "inputs": [],
      "name": "bet",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "maxBet",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "minBet",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "reveal",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "players",
      "outputs": [
        {
          "name": "stage",
          "type": "uint8"
        },
        {
          "name": "block",
          "type": "uint256"
        },
        {
          "name": "bet",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "payoutPerCombination",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "player",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "block",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "bet",
          "type": "uint256"
        }
      ],
      "name": "Bet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "player",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "numbers",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "name": "result",
          "type": "uint256"
        }
      ],
      "name": "Reveal",
      "type": "event"
    }
  ],
  "transactionHash": "0x008c6ce2d39ab8956b17adfb35393f3d671b0deafe05340bbeb800c1dda1190f",
  "receipt": {
    "to": null,
    "from": "0x2c1dE1af8a236aa0f1EA8B45D292139604Bc8FF2",
    "contractAddress": "0x38AD953A1B8Dae3dBbe77D93d04349D73c2dA2D0",
    "transactionIndex": 40,
    "gasUsed": "1400784",
    "logsBloom": "0x
    "blockHash": "0x2da5c4ec5ca570ed25402a5741149253f96d1df5c412987bb14da9bf166e8771",
    "transactionHash": "0x008c6ce2d39ab8956b17adfb35393f3d671b0deafe05340bbeb800c1dda1190f",
    "logs": [],
    "blockNumber": 8182866,
    "cumulativeGasUsed": "4303899",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "cfc18016c85dabec7d34c36bdc37cb5f",
  "metadata": "{\"compiler\":{\"version\":\"0.4.22+commit.4cb486ee\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"bet\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxBet\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minBet\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"reveal\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"players\",\"outputs\":[{\"name\":\"stage\",\"type\":\"uint8\"},{\"name\":\"block\",\"type\":\"uint256\"},{\"name\":\"bet\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"payoutPerCombination\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"block\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"bet\",\"type\":\"uint256\"}],\"name\":\"Bet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"numbers\",\"type\":\"uint256[]\"},{\"indexed\":false,\"name\":\"result\",\"type\":\"uint256\"}],\"name\":\"Reveal\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/Bingo.sol\":\"Bingo\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Bingo.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity >=0.4.22 <0.6.0;\\r\\n\\r\\nimport \\\"./SafeMath.sol\\\";\\r\\n\\r\\ncontract Bingo {\\r\\n    using SafeMath for uint256;\\r\\n\\r\\n    enum Stage {\\r\\n        BETTING,\\r\\n        REVEALING\\r\\n    }\\r\\n\\r\\n    struct Player {\\r\\n        Stage stage;\\r\\n        uint256 block;\\r\\n        uint256 bet;\\r\\n        uint256[] card;\\r\\n        uint256[] generatedNumders;\\r\\n        mapping(uint256 => uint256) cardsCheker;\\r\\n    }\\r\\n\\r\\n    uint256 public minBet = 100000;\\r\\n    uint256 public maxBet = 1000000000;\\r\\n    uint256 public payoutPerCombination = 2;\\r\\n    mapping(address => Player) public players;\\r\\n\\r\\n    event Bet(address player, uint256 block, uint256 bet);\\r\\n    event Reveal(address player, uint256[] numbers, uint256 result);\\r\\n\\r\\n    function bet() public payable {\\r\\n        require(msg.value >= minBet && msg.value <= maxBet);\\r\\n        require(players[msg.sender].stage == Stage.BETTING);\\r\\n        players[msg.sender] = Player(\\r\\n            Stage.REVEALING,\\r\\n            block.number,\\r\\n            msg.value,\\r\\n            new uint256[](25),\\r\\n            new uint256[](30)\\r\\n        );\\r\\n        emit Bet(msg.sender, block.number, msg.value);\\r\\n    }\\r\\n\\r\\n    function reveal() public {\\r\\n        require(players[msg.sender].stage == Stage.REVEALING);\\r\\n        uint256 result;\\r\\n        uint256 i;\\r\\n        uint256 card;\\r\\n        uint256 idx;\\r\\n        Player storage player = players[msg.sender];\\r\\n        bytes32 blockHashPrevious = blockhash(players[msg.sender].block);\\r\\n        uint256 seed = uint256(blockHashPrevious);\\r\\n        uint256 rand = uint256(keccak256(abi.encodePacked(seed, msg.sender)));\\r\\n\\r\\n        while (i < 25) {\\r\\n            card = 1 + ((rand & 255) % 75);\\r\\n            rand = (rand >> 8 > 0)\\r\\n                ? rand >> 8\\r\\n                : uint256(keccak256(abi.encodePacked(seed, msg.sender, i)));\\r\\n            idx = player.cardsCheker[card];\\r\\n            if (idx == 0) {\\r\\n                players[msg.sender].card[i] = card;\\r\\n                player.cardsCheker[card] = i;\\r\\n                i += (i == 11) ? 2 : 1;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        uint256[] memory numbers = players[msg.sender].card;\\r\\n\\r\\n        rand = uint256(keccak256(abi.encodePacked(seed, address(this))));\\r\\n        i = 0;\\r\\n        card = 0;\\r\\n        idx = 0;\\r\\n\\r\\n        while (i < 30) {\\r\\n            card = 1 + ((rand & 255) % 75);\\r\\n            rand = (rand >> 8 > 0)\\r\\n                ? rand >> 8\\r\\n                : uint256(keccak256(abi.encodePacked(seed, address(this), i)));\\r\\n            player.generatedNumders[i] = card;\\r\\n            idx = player.cardsCheker[card];\\r\\n            if (player.card[idx] == card) {\\r\\n                players[msg.sender].card[i] = 0;\\r\\n                player.cardsCheker[card] = 0;\\r\\n            }\\r\\n            i++;\\r\\n        }\\r\\n\\r\\n        for (i = 0; i < 5; i++) {\\r\\n            if (\\r\\n                players[msg.sender].card[i * 5 + 0] == 0 &&\\r\\n                players[msg.sender].card[i * 5 + 1] == 0 &&\\r\\n                players[msg.sender].card[i * 5 + 2] == 0 &&\\r\\n                players[msg.sender].card[i * 5 + 3] == 0 &&\\r\\n                players[msg.sender].card[i * 5 + 4] == 0\\r\\n            ) {\\r\\n                result++;\\r\\n            }\\r\\n\\r\\n            if (\\r\\n                players[msg.sender].card[0 + i] == 0 &&\\r\\n                players[msg.sender].card[5 + i] == 0 &&\\r\\n                players[msg.sender].card[10 + i] == 0 &&\\r\\n                players[msg.sender].card[15 + i] == 0 &&\\r\\n                players[msg.sender].card[20 + i] == 0\\r\\n            ) {\\r\\n                result++;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        if (\\r\\n            players[msg.sender].card[0 + i] == 0 &&\\r\\n            players[msg.sender].card[6] == 0 &&\\r\\n            players[msg.sender].card[12] == 0 &&\\r\\n            players[msg.sender].card[18] == 0 &&\\r\\n            players[msg.sender].card[24] == 0\\r\\n        ) {\\r\\n            result++;\\r\\n        }\\r\\n\\r\\n        if (\\r\\n            players[msg.sender].card[4] == 0 &&\\r\\n            players[msg.sender].card[8] == 0 &&\\r\\n            players[msg.sender].card[12] == 0 &&\\r\\n            players[msg.sender].card[16] == 0 &&\\r\\n            players[msg.sender].card[20] == 0\\r\\n        ) {\\r\\n            result++;\\r\\n        }\\r\\n\\r\\n        msg.sender.transfer(player.bet.mul(result).mul(payoutPerCombination));\\r\\n        players[msg.sender] = Player(Stage.BETTING, 0, 0, new uint256[](25), new uint256[](30));\\r\\n        emit Reveal(msg.sender, numbers, result);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x0b6e23bd63a35ed16af14b5bd5a147d1fab43373b0579c7d632a11d06cd56fc3\"},\"contracts/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity >=0.4.22 <0.6.0;\\r\\n\\r\\nlibrary SafeMath {\\r\\n    function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\\r\\n        c = a + b;\\r\\n        require(c >= a, \\\"Overflow.\\\");\\r\\n    }\\r\\n\\r\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256 c) {\\r\\n        require(b <= a, \\\"Overflow.\\\");\\r\\n        c = a - b;\\r\\n    }\\r\\n\\r\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\\r\\n        c = a * b;\\r\\n        require(a == 0 || c / a == b, \\\"Overflow.\\\");\\r\\n    }\\r\\n\\r\\n    function div(uint256 a, uint256 b) internal pure returns (uint256 c) {\\r\\n        require(b != 0, \\\"Division by zero.\\\");\\r\\n        c = a / b;\\r\\n    }\\r\\n\\r\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256 c) {\\r\\n        require(b != 0, \\\"Division by zero.\\\");\\r\\n        c = a % b;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x2c56bc7ae5629d76a054e5ee594d53b05f46f0def87f1d7b86ee84c27c8cc951\"}},\"version\":1}",
  "bytecode": "0x6080604052620186a0600055633b9aca006001556002805534801561002357600080fd5b50611737806100336000396000f300608060405260043610610078576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806311610c251461007d5780632e5b2168146100875780639619367d146100b2578063a475b5dd146100dd578063e2eb41ff146100f4578063e48e7e4014610167575b600080fd5b610085610192565b005b34801561009357600080fd5b5061009c6103e6565b6040518082815260200191505060405180910390f35b3480156100be57600080fd5b506100c76103ec565b6040518082815260200191505060405180910390f35b3480156100e957600080fd5b506100f26103f2565b005b34801561010057600080fd5b50610135600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506115c2565b6040518084600181111561014557fe5b60ff168152602001838152602001828152602001935050505060405180910390f35b34801561017357600080fd5b5061017c6115f9565b6040518082815260200191505060405180910390f35b60005434101580156101a657506001543411155b15156101b157600080fd5b600060018111156101be57fe5b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16600181111561021957fe5b14151561022557600080fd5b60a06040519081016040528060018081111561023d57fe5b8152602001438152602001348152602001601960405190808252806020026020018201604052801561027e5781602001602082028038833980820191505090505b508152602001601e6040519080825280602002602001820160405280156102b45781602001602082028038833980820191505090505b50815250600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548160ff0219169083600181111561031b57fe5b021790555060208201518160010155604082015181600201556060820151816003019080519060200190610350929190611699565b50608082015181600401908051906020019061036d929190611699565b509050507ff41b7910e085d0992d604fd470931728fd77cc8eb504d99e50e51a0a30fcfd1a334334604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a1565b60015481565b60005481565b600080600080600080600080606060018081111561040c57fe5b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16600181111561046757fe5b14151561047357600080fd5b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209450600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154409350836001900492508233604051602001808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401925050506040516020818303038152906040526040518082805190602001908083835b6020831015156105995780518252602082019150602081019050602083039250610574565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206001900491505b601988101561079557604b60ff83168115156105e557fe5b06600101965060006008839060020a9004116106d157823389604051602001808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c0100000000000000000000000002815260140182815260200193505050506040516020818303038152906040526040518082805190602001908083835b60208310151561069b5780518252602082019150602081019050602083039250610676565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020600190046106db565b6008829060020a90045b915084600501600088815260200190815260200160002054955060008614156107905786600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003018981548110151561074e57fe5b90600052602060002001819055508785600501600089815260200190815260200160002081905550600b8814610785576001610788565b60025b60ff16880197505b6105cd565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030180548060200260200160405190810160405280929190818152602001828054801561082157602002820191906000526020600020905b81548152602001906001019080831161080d575b505050505090508230604051602001808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401925050506040516020818303038152906040526040518082805190602001908083835b6020831015156108c0578051825260208201915060208101905060208303925061089b565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206001900491506000975060009650600095505b601e881015610af357604b60ff831681151561091857fe5b06600101965060006008839060020a900411610a0457823089604051602001808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c0100000000000000000000000002815260140182815260200193505050506040516020818303038152906040526040518082805190602001908083835b6020831015156109ce57805182526020820191506020810190506020830392506109a9565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060019004610a0e565b6008829060020a90045b9150868560040189815481101515610a2257fe5b9060005260206000200181905550846005016000888152602001908152602001600020549550868560030187815481101515610a5a57fe5b90600052602060002001541415610ae6576000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030189815481101515610abc57fe5b90600052602060002001819055506000856005016000898152602001908152602001600020819055505b8780600101985050610900565b600097505b6005881015610f39576000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301600060058b0201815481101515610b5857fe5b9060005260206000200154148015610bcf57506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301600160058b0201815481101515610bc257fe5b9060005260206000200154145b8015610c3a57506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301600260058b0201815481101515610c2d57fe5b9060005260206000200154145b8015610ca557506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301600360058b0201815481101515610c9857fe5b9060005260206000200154145b8015610d1057506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301600460058b0201815481101515610d0357fe5b9060005260206000200154145b15610d1e5788806001019950505b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030189600001815481101515610d7257fe5b9060005260206000200154148015610de657506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030189600501815481101515610dd957fe5b9060005260206000200154145b8015610e4e57506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030189600a01815481101515610e4157fe5b9060005260206000200154145b8015610eb657506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030189600f01815481101515610ea957fe5b9060005260206000200154145b8015610f1e57506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030189601401815481101515610f1157fe5b9060005260206000200154145b15610f2c5788806001019950505b8780600101985050610af8565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030189600001815481101515610f8d57fe5b9060005260206000200154148015610fff57506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003016006815481101515610ff257fe5b9060005260206000200154145b801561106557506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301600c81548110151561105857fe5b9060005260206000200154145b80156110cb57506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160128154811015156110be57fe5b9060005260206000200154145b801561113157506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301601881548110151561112457fe5b9060005260206000200154145b1561113f5788806001019950505b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301600481548110151561119157fe5b906000526020600020015414801561120357506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160088154811015156111f657fe5b9060005260206000200154145b801561126957506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301600c81548110151561125c57fe5b9060005260206000200154145b80156112cf57506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160108154811015156112c257fe5b9060005260206000200154145b801561133557506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301601481548110151561132857fe5b9060005260206000200154145b156113435788806001019950505b3373ffffffffffffffffffffffffffffffffffffffff166108fc61138860025461137a8d8a600201546115ff90919063ffffffff16565b6115ff90919063ffffffff16565b9081150290604051600060405180830381858888f193505050501580156113b3573d6000803e3d6000fd5b5060a060405190810160405280600060018111156113cd57fe5b8152602001600081526020016000815260200160196040519080825280602002602001820160405280156114105781602001602082028038833980820191505090505b508152602001601e6040519080825280602002602001820160405280156114465781602001602082028038833980820191505090505b50815250600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548160ff021916908360018111156114ad57fe5b0217905550602082015181600101556040820151816002015560608201518160030190805190602001906114e2929190611699565b5060808201518160040190805190602001906114ff929190611699565b509050507f2510b5fa56ee27c8026eb08dfd4c4f091a07df77c149b45a820ffa4954af9f3633828b604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001838152602001828103825284818151815260200191508051906020019060200280838360005b838110156115a2578082015181840152602081019050611587565b5050505090500194505050505060405180910390a1505050505050505050565b60036020528060005260406000206000915090508060000160009054906101000a900460ff16908060010154908060020154905083565b60025481565b60008183029050600083148061161f575081838281151561161c57fe5b04145b1515611693576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260098152602001807f4f766572666c6f772e000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b92915050565b8280548282559060005260206000209081019282156116d5579160200282015b828111156116d45782518255916020019190600101906116b9565b5b5090506116e291906116e6565b5090565b61170891905b808211156117045760008160009055506001016116ec565b5090565b905600a165627a7a723058202b3be816a03a0e9e34824122fdfc535ae05716276f02f57aefcf4b7b4541d8370029",
  "deployedBytecode": "0x608060405260043610610078576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806311610c251461007d5780632e5b2168146100875780639619367d146100b2578063a475b5dd146100dd578063e2eb41ff146100f4578063e48e7e4014610167575b600080fd5b610085610192565b005b34801561009357600080fd5b5061009c6103e6565b6040518082815260200191505060405180910390f35b3480156100be57600080fd5b506100c76103ec565b6040518082815260200191505060405180910390f35b3480156100e957600080fd5b506100f26103f2565b005b34801561010057600080fd5b50610135600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506115c2565b6040518084600181111561014557fe5b60ff168152602001838152602001828152602001935050505060405180910390f35b34801561017357600080fd5b5061017c6115f9565b6040518082815260200191505060405180910390f35b60005434101580156101a657506001543411155b15156101b157600080fd5b600060018111156101be57fe5b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16600181111561021957fe5b14151561022557600080fd5b60a06040519081016040528060018081111561023d57fe5b8152602001438152602001348152602001601960405190808252806020026020018201604052801561027e5781602001602082028038833980820191505090505b508152602001601e6040519080825280602002602001820160405280156102b45781602001602082028038833980820191505090505b50815250600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548160ff0219169083600181111561031b57fe5b021790555060208201518160010155604082015181600201556060820151816003019080519060200190610350929190611699565b50608082015181600401908051906020019061036d929190611699565b509050507ff41b7910e085d0992d604fd470931728fd77cc8eb504d99e50e51a0a30fcfd1a334334604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a1565b60015481565b60005481565b600080600080600080600080606060018081111561040c57fe5b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16600181111561046757fe5b14151561047357600080fd5b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209450600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154409350836001900492508233604051602001808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401925050506040516020818303038152906040526040518082805190602001908083835b6020831015156105995780518252602082019150602081019050602083039250610574565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206001900491505b601988101561079557604b60ff83168115156105e557fe5b06600101965060006008839060020a9004116106d157823389604051602001808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c0100000000000000000000000002815260140182815260200193505050506040516020818303038152906040526040518082805190602001908083835b60208310151561069b5780518252602082019150602081019050602083039250610676565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020600190046106db565b6008829060020a90045b915084600501600088815260200190815260200160002054955060008614156107905786600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003018981548110151561074e57fe5b90600052602060002001819055508785600501600089815260200190815260200160002081905550600b8814610785576001610788565b60025b60ff16880197505b6105cd565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030180548060200260200160405190810160405280929190818152602001828054801561082157602002820191906000526020600020905b81548152602001906001019080831161080d575b505050505090508230604051602001808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401925050506040516020818303038152906040526040518082805190602001908083835b6020831015156108c0578051825260208201915060208101905060208303925061089b565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206001900491506000975060009650600095505b601e881015610af357604b60ff831681151561091857fe5b06600101965060006008839060020a900411610a0457823089604051602001808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c0100000000000000000000000002815260140182815260200193505050506040516020818303038152906040526040518082805190602001908083835b6020831015156109ce57805182526020820191506020810190506020830392506109a9565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060019004610a0e565b6008829060020a90045b9150868560040189815481101515610a2257fe5b9060005260206000200181905550846005016000888152602001908152602001600020549550868560030187815481101515610a5a57fe5b90600052602060002001541415610ae6576000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030189815481101515610abc57fe5b90600052602060002001819055506000856005016000898152602001908152602001600020819055505b8780600101985050610900565b600097505b6005881015610f39576000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301600060058b0201815481101515610b5857fe5b9060005260206000200154148015610bcf57506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301600160058b0201815481101515610bc257fe5b9060005260206000200154145b8015610c3a57506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301600260058b0201815481101515610c2d57fe5b9060005260206000200154145b8015610ca557506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301600360058b0201815481101515610c9857fe5b9060005260206000200154145b8015610d1057506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301600460058b0201815481101515610d0357fe5b9060005260206000200154145b15610d1e5788806001019950505b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030189600001815481101515610d7257fe5b9060005260206000200154148015610de657506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030189600501815481101515610dd957fe5b9060005260206000200154145b8015610e4e57506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030189600a01815481101515610e4157fe5b9060005260206000200154145b8015610eb657506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030189600f01815481101515610ea957fe5b9060005260206000200154145b8015610f1e57506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030189601401815481101515610f1157fe5b9060005260206000200154145b15610f2c5788806001019950505b8780600101985050610af8565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030189600001815481101515610f8d57fe5b9060005260206000200154148015610fff57506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003016006815481101515610ff257fe5b9060005260206000200154145b801561106557506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301600c81548110151561105857fe5b9060005260206000200154145b80156110cb57506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160128154811015156110be57fe5b9060005260206000200154145b801561113157506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301601881548110151561112457fe5b9060005260206000200154145b1561113f5788806001019950505b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301600481548110151561119157fe5b906000526020600020015414801561120357506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160088154811015156111f657fe5b9060005260206000200154145b801561126957506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301600c81548110151561125c57fe5b9060005260206000200154145b80156112cf57506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160108154811015156112c257fe5b9060005260206000200154145b801561133557506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301601481548110151561132857fe5b9060005260206000200154145b156113435788806001019950505b3373ffffffffffffffffffffffffffffffffffffffff166108fc61138860025461137a8d8a600201546115ff90919063ffffffff16565b6115ff90919063ffffffff16565b9081150290604051600060405180830381858888f193505050501580156113b3573d6000803e3d6000fd5b5060a060405190810160405280600060018111156113cd57fe5b8152602001600081526020016000815260200160196040519080825280602002602001820160405280156114105781602001602082028038833980820191505090505b508152602001601e6040519080825280602002602001820160405280156114465781602001602082028038833980820191505090505b50815250600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548160ff021916908360018111156114ad57fe5b0217905550602082015181600101556040820151816002015560608201518160030190805190602001906114e2929190611699565b5060808201518160040190805190602001906114ff929190611699565b509050507f2510b5fa56ee27c8026eb08dfd4c4f091a07df77c149b45a820ffa4954af9f3633828b604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001838152602001828103825284818151815260200191508051906020019060200280838360005b838110156115a2578082015181840152602081019050611587565b5050505090500194505050505060405180910390a1505050505050505050565b60036020528060005260406000206000915090508060000160009054906101000a900460ff16908060010154908060020154905083565b60025481565b60008183029050600083148061161f575081838281151561161c57fe5b04145b1515611693576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260098152602001807f4f766572666c6f772e000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b92915050565b8280548282559060005260206000209081019282156116d5579160200282015b828111156116d45782518255916020019190600101906116b9565b5b5090506116e291906116e6565b5090565b61170891905b808211156117045760008160009055506001016116ec565b5090565b905600a165627a7a723058202b3be816a03a0e9e34824122fdfc535ae05716276f02f57aefcf4b7b4541d8370029",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}